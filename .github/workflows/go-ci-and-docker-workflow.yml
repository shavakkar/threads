name: CI with GHCR upload
'on':
  push:
    branches:
      - '**'
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  go_ci_job:
    name: Go CI Job
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Go CI code Lint
        uses: golangci/golangci-lint-action@v3
      - name: Go CI code Unit Test
        run: go test -v ./...
      - name: Run Go Build
        run: go build -v ./...
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
      - name: Setup docker
        uses: docker/setup-buildx-action@v2.7.0
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Docker Build and Push
        id: build-and-push
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64,linux/arm/v8
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: 'true'
        run: >-
          echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --yes
          {}@${{ steps.build-and-push.outputs.digest }}
